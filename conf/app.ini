[pipeline:main]
# Most errors will be handled in exception views within the application. The
# raven middleware is here primarily as a fail-safe, and to capture errors
# thrown by framework code.
pipeline:
  proxy-prefix
  raven
  h


[app:h]
use: egg:h

# Elasticsearch configuration
#es.host: http://localhost:9200
#es.index: annotator

# OAuth settings
# These client credentials are used by the built-in Web client.
# If not provided, both default to a random URL-safe base64-encoded string.
#h.client_id:
#h.client_secret:

# Mail server configuration -- see the pyramid_mailer documentation
mail.default_sender: "Annotation Daemon" <no-reply@localhost>
#mail.host: localhost
#mail.port: 25

# Include any deployment-specific pyramid add-ons here
pyramid.includes:
    pyramid_mailer
    pyramid_redis_sessions
    pyramid_tm

# Redis session configuration -- See pyramid_redis_sessions documentation
#redis.sessions.secret:
redis.sessions.cookie_httponly: True
redis.sessions.cookie_max_age: 2592000
redis.sessions.timeout: 604800

# SQLAlchemy configuration -- See SQLAlchemy documentation
sqlalchemy.url: postgresql://postgres@localhost/postgres

# Static asset configuration -- see webassets documentation
# Until the next pyramid_webassets, don't change these.
# Example:
#   webassets.base_dir: /srv/www/static
#   webassets.base_url: https://static.example.com
webassets.cache_max_age: 31536000
webassets.static_view: True
webassets.uglifyjs_bin: ./node_modules/.bin/uglifyjs


[filter:proxy-prefix]
use: egg:PasteDeploy#prefix


[filter:raven]
use: egg:raven#raven


[server:main]
use: egg:gunicorn
host: 0.0.0.0
port: 5000


[loggers]
keys = root, sentry, gunicorn.error, alembic


[handlers]
keys = console, sentry


[formatters]
keys = generic


[logger_root]
handlers = console, sentry


[logger_sentry]
level = WARN
handlers = console
qualname = sentry.errors
propagate = 0


[logger_gunicorn.error]
handlers =
qualname = gunicorn.error


[logger_alembic]
level = INFO
handlers =
qualname = alembic


[handler_console]
class = StreamHandler
args = ()
formatter = generic


[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ()
level = WARN
formatter = generic


[formatter_generic]
format = %(asctime)s [%(process)d] [%(name)s:%(levelname)s] %(message)s
